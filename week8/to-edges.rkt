#lang racket

(require "graph.rkt")

(provide to-edges)

(define (to-edges graph)
  (apply
      append
      (map  ;; итерираме по графа
          (lambda (row)  ;; на всеки списък от вида '(родител дете1 дете2 ... детеN) на графа съпостави списъка '((родител . дете1) (родител . дете2) ...)
              (map  ;; итерираме по децата да даден връх - т.е. по дете1, дете2 ... детеN
                  (lambda (child) ;; на всяко дете съпостави наредена двойка от вида '(родител . дете)
                      (cons (car row) child))
                  (cdr row)))
          graph)))

;; (to-edges example-graph)
;; връща
;; '((1 . 2) (2 . 1) (2 . 3) (2 . 4)
;;   (3 . 3) (4 . 1) (4 . 3) (5 . 6))
