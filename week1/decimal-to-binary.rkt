#lang racket

(define (decimal-to-binary number)
	(if (< number 1)
		0
		(+ (remainder number 2) (* 10 (decimal-to-binary (quotient number 2))))))



;; 10 % 2 = 0 and 10 / 2 = 5
;;  5 % 2 = 1 and  5 / 2 = 2
;;  2 % 2 = 0 and  2 / 2 = 1
;;  1 % 2 = 1 and  1 / 2 = 0


;; (+ 0 (* 10 (decimal-to-binary 5))) =
;; (+ 0 (* 10 (+ 1 (* 10 decimal-to-binary 2)))) =
;; (+ 0 (* 10 (+ 1 (* 10 (+ 0 (* 10 (decimal-to-binary 1))))))) =
;; (+ 0 (* 10 (+ 1 (* 10 (+ 0 (* 10 (+ 1 (* 10 (decimal-to-binary 0))))))))) =
;; (+ 0 (* 10 (+ 1 (* 10 (+ 0 (* 10 (+ 1 (* 10 0)))))))) =
;; (+ 0 (* 10 (+ 1 (* 10 (+ 0 (* 10 (+ 1 0)))))) =
;; (+ 0 (* 10 (+ 1 (* 10 (+ 0 (* 10 1)))))) =
;; (+ 0 (* 10 (+ 1 (* 10 (+ 0 10))))) =
;; (+ 0 (* 10 (+ 1 (* 10 10)))) =
;; (+ 0 (* 10 (+ 1 100))) =
;; (+ 0 (* 10 101)) =
;; (+ 0 1010) =
;; 1010